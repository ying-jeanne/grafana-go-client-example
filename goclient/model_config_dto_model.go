/*
 * Grafana HTTP API.
 *
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * API version: 0.0.1
 * Contact: hello@grafana.com
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

package goclient

import (
	"time"
)

// ConfigDTO is model representation in transfer
type ConfigDtoModel struct {
	Created            time.Time              `json:"created,omitempty"`
	DashboardId        int64                  `json:"dashboardId,omitempty"`
	DashboardName      string                 `json:"dashboardName,omitempty"`
	DashboardUid       string                 `json:"dashboardUid,omitempty"`
	Dashboards         []DashboardDtoModel    `json:"dashboards,omitempty"`
	EnableCsv          bool                   `json:"enableCsv,omitempty"`
	EnableDashboardUrl bool                   `json:"enableDashboardUrl,omitempty"`
	Formats            []TypeModel            `json:"formats,omitempty"`
	Id                 int64                  `json:"id,omitempty"`
	Message            string                 `json:"message,omitempty"`
	Name               string                 `json:"name,omitempty"`
	Options            *ReportOptionsDtoModel `json:"options,omitempty"`
	OrgId              int64                  `json:"orgId,omitempty"`
	Recipients         string                 `json:"recipients,omitempty"`
	ReplyTo            string                 `json:"replyTo,omitempty"`
	Schedule           *ScheduleDtoModel      `json:"schedule,omitempty"`
	State              string                 `json:"state,omitempty"`
	TemplateVars       interface{}            `json:"templateVars,omitempty"`
	Updated            time.Time              `json:"updated,omitempty"`
	UserId             int64                  `json:"userId,omitempty"`
}
